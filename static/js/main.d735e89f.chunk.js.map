{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","handlePrevButton","props","images","step","frameSize","lastPosition","length","prevPosition","setState","handleNextButton","nextPosition","this","itemWidth","animationDuration","infinite","isPrevDisabled","isNextDisabled","wi","className","style","width","transition","map","image","index","transform","src","alt","type","disabled","onClick","React","Component","App","setInput","e","target","value","name","checked","prevState","action","htmlFor","id","min","max","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d735e89f.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport './Carousel.scss';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\ninterface State {\n  position: number;\n}\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  handlePrevButton = () => {\n    const { images, step, frameSize } = this.props;\n    const { position } = this.state;\n    const lastPosition = images.length - frameSize;\n    let prevPosition = position - step;\n\n    if (position === 0) {\n      prevPosition = lastPosition;\n    }\n\n    if (prevPosition < 0) {\n      prevPosition = 0;\n    }\n\n    this.setState({ position: prevPosition });\n  };\n\n  handleNextButton = () => {\n    const { images, step, frameSize } = this.props;\n    const { position } = this.state;\n    const lastPosition = images.length - frameSize;\n    let nextPosition = position + step;\n\n    if (position === lastPosition) {\n      nextPosition = 0;\n    }\n\n    if (nextPosition > lastPosition) {\n      nextPosition = lastPosition;\n    }\n\n    this.setState({ position: nextPosition });\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { position } = this.state;\n    const isPrevDisabled = (position <= 0) && !infinite;\n    const isNextDisabled = (position >= images.length - frameSize) && !infinite;\n    const wi = frameSize * itemWidth;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${wi}px`,\n          transition: `${animationDuration}ms`,\n        }}\n      >\n        <ul className=\"Carousel__list\">\n          {images.map((image, index) => (\n            <li key={index}>\n              <img\n                style={{\n                  transform: `translateX(${-position * itemWidth}px)`,\n                  transition: `transform ${animationDuration}ms ease-in-out`,\n                }}\n                src={image}\n                alt={`${index}`}\n                width={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            data-cy=\"prev\"\n            className=\"Carousel__button\"\n            disabled={isPrevDisabled}\n            onClick={this.handlePrevButton}\n          >\n            Prev\n          </button>\n\n          <button\n            type=\"button\"\n            data-cy=\"next\"\n            className=\"Carousel__button\"\n            disabled={isNextDisabled}\n            onClick={this.handleNextButton}\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  setInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const {\n      value,\n      name,\n      checked,\n      type,\n    } = e.target;\n\n    if (name === 'frameSize') {\n      this.setState((prevState) => ({\n        ...prevState,\n        frameSize: +value,\n      }));\n    }\n\n    this.setState((prevState) => ({\n      ...prevState,\n      [name]: type === 'checkbox' ? checked : +value,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n        <h1\n          className=\"App__title\"\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <form action=\"/\">\n          <label\n            className=\"form__label\"\n            htmlFor=\"itemId\"\n          >\n            Item width\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"itemWidth\"\n              id=\"itemId\"\n              min={130}\n              max={260}\n              value={itemWidth}\n              onChange={this.setInput}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n          >\n            Frame Size\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"frameSize\"\n              id=\"fromeId\"\n              min={1}\n              max={images.length}\n              step={1}\n              value={frameSize}\n              onChange={this.setInput}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n            htmlFor=\"stepId\"\n          >\n            Step\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"step\"\n              id=\"stepId\"\n              min={1}\n              max={images.length}\n              step={1}\n              value={step}\n              onChange={this.setInput}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n          >\n            Animation Duration\n            <input\n              type=\"number\"\n              className=\"form__input\"\n              name=\"animationDuration\"\n              id=\"animationDurationId\"\n              min={500}\n              max={3000}\n              step={500}\n              value={animationDuration}\n              onChange={this.setInput}\n            />\n          </label>\n\n          <label\n            className=\"form__label\"\n          >\n            Infinite\n            <input\n              type=\"checkbox\"\n              className=\"form__input\"\n              name=\"infinite\"\n              id=\"infiniteId\"\n              onChange={this.setInput}\n            />\n          </label>\n        </form>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}